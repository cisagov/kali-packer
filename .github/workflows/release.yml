---
name: release

on:
  release:
    types: [released]

env:
  AWS_DEFAULT_REGION: us-east-1
  BUILD_REGION: us-east-1
  BUILD_REGION_KMS: alias/cool-amis
  # Do not copy the AMI to other regions until we have figured out a
  # workable mechanism for creating and managing AMI KMS keys in other
  # regions.
  # See https://github.com/cisagov/cool-system/issues/18 for details.
  # COPY_REGIONS_KMS_MAP: "us-east-2:alias/cool-amis,
  #                        us-west-1:alias/cool-amis,
  #                        us-west-2:alias/cool-amis"
  CURL_CACHE_DIR: ~/.cache/curl
  PIP_CACHE_DIR: ~/.cache/pip
  RUN_TMATE: ${{ secrets.RUN_TMATE }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: cisagov/setup-env-github-action@develop
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Store installed Python version
        run: |
          echo "::set-env name=PY_VERSION::"\
          "$(python -c "import platform;print(platform.python_version())")"
      - name: Cache release building environments
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            ${{ env.CURL_CACHE_DIR }}
          key: "release-${{ runner.os }}-\
            py${{ env.PY_VERSION }}-\
            packer-${{ env.PACKER_VERSION }}-\
            tf-${{ env.TERRAFORM_VERSION }}-\
            ${{ hashFiles('**/requirements.txt') }}"
          restore-keys: |
            release-${{ runner.os }}-\
            py${{ env.PY_VERSION }}-\
            packer-${{ env.PACKER_VERSION }}-\
            tf-${{ env.TERRAFORM_VERSION }}-
            release-${{ runner.os }}-
      - name: Install Packer
        run: |
          mkdir -p ${{ env.CURL_CACHE_DIR }}
          PACKER_ZIP="packer_${PACKER_VERSION}_linux_amd64.zip"
          curl --output ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}" \
            --time-cond ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}" \
            --location \
            "https://releases.hashicorp.com/packer/${PACKER_VERSION}/${PACKER_ZIP}"
          sudo unzip -o -d /usr/local/bin \
            ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}"
      - name: Install Terraform
        run: |
          TERRAFORM_ZIP="terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          curl --output ${{ env.CURL_CACHE_DIR }}/"${TERRAFORM_ZIP}" \
            --time-cond ${{ env.CURL_CACHE_DIR }}/"${TERRAFORM_ZIP}" \
            --location \
            "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_ZIP}"
          sudo unzip -d /opt/terraform \
            ${{ env.CURL_CACHE_DIR }}/"${TERRAFORM_ZIP}"
          sudo ln -s /opt/terraform/terraform /usr/bin/terraform
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
                      --requirement requirements.txt
      - name: Install ansible roles
        run: ansible-galaxy install --force --role-file src/requirements.yml
      # Do not copy the AMI to other regions until we have figured out a
      # workable mechanism for creating and managing AMI KMS keys in other
      # regions.
      # See https://github.com/cisagov/cool-system/issues/18 for details.
      # - name: Add copy regions to packer configuration
      #   run: |
      #     echo $COPY_REGIONS_KMS_MAP | \
      #       ./patch_packer_config.py src/packer.json
      - name: Assume AWS build role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.BUILD_REGION }}
          role-to-assume: ${{ secrets.BUILD_ROLE_TO_ASSUME_PRODUCTION }}
          role-duration-seconds: 7200 # 2 hours
      - name: Create machine image
        env:
          GITHUB_IS_PRERELEASE: ${{ github.event.release.prerelease }}
          GITHUB_RELEASE_TAG: ${{ github.event.release.tag_name }}
          GITHUB_RELEASE_URL: ${{ github.event.release.html_url }}
          AWS_MAX_ATTEMPTS: 240
        run: packer build --timestamp-ui src/packer.json
      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@v1
        if: env.RUN_TMATE
